<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software development notes</title>
    <description>Notes on my daily work as a software developer.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 01 Mar 2016 01:38:23 +0700</pubDate>
    <lastBuildDate>Tue, 01 Mar 2016 01:38:23 +0700</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>Public Key Infrastructure (PKI)</title>
        <description>&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;p&gt;PKI is security infrastructure which provides all necessary services to implement public-key cryptography and thus enables secure communication using public-key cryptography on open networks.&lt;/p&gt;

&lt;h1 id=&quot;main-concepts&quot;&gt;Main concepts&lt;/h1&gt;

&lt;h2 id=&quot;public-key-cryptography&quot;&gt;Public-key cryptography&lt;/h2&gt;

&lt;p&gt;The main idea of public-key cryptography is to use different keys for encryption and decryption. The encryption key is made public and thus also called public key, while the decryption key is kept private and thus also called private key.&lt;/p&gt;

&lt;p&gt;Two important requirements on public-key cryptography are that the encryption function must be a one-way function and that it is infeasible to derive one key from another.&lt;/p&gt;

&lt;p&gt;Public-key cryptosystems use the public key to encrypt messages. The encrypted messages can only be decrypted with the corresponding private keys. Thus, even if the messages are intercepted, the interceptors still cannot know the original messages unless they know the private keys. The main processing flow is as follows [1]:
&lt;img src=&quot;/assets/imgs/pki/public-key-cryptography.png&quot; alt=&quot;public-key-cryptography&quot; title=&quot;public-key-cryptography&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first and most widely used public-key cryptosystem is RSA, which is named after its inventors Ron Rivest, Adi Shamir, and Leonard Adleman.&lt;/p&gt;

&lt;h2 id=&quot;digital-signatures&quot;&gt;Digital signatures&lt;/h2&gt;

&lt;p&gt;Digital signatures are analogous to hand-written signatures in that they are used to prove the authenticity of a message. The main idea is that then sender uses its private key (which is only known to the sender) to sign the message and the receiver will use the sender’s public key to verify the signature. The process is as follows [2]:
&lt;img src=&quot;/assets/imgs/pki/digital-signature.png&quot; alt=&quot;digital-signature&quot; title=&quot;digital-signature&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is important to note that the signature must always be associated with the message from which the signature is created.&lt;/p&gt;

&lt;p&gt;The most widely used digital signature is the RSA signature scheme.&lt;/p&gt;

&lt;h2 id=&quot;digital-certificates&quot;&gt;Digital certificates&lt;/h2&gt;

&lt;p&gt;Digital certificates are used to prove the authenticity of public keys by binding public keys to their owners. Without certificates, public-key cryptography can easily be the victim of the man-in-the-middle attacks. For example, if Oscar somehow replaces Alice’s public key by his, then every messages encrypted with the compromised Alice’s public key can be decrypted by Oscar when he intercepts the messages.&lt;/p&gt;

&lt;p&gt;In its simplest form, a certificate looks like this [2]:
&lt;img src=&quot;/assets/imgs/pki/simple-cert.png&quot; alt=&quot;simplest-cert&quot; title=&quot;simple-cert&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The certificate contains the signature which must be signed by a certificate authority. This signature guarantees the integrity of the certificate, which provides the information about the public key and its owner.&lt;/p&gt;

&lt;p&gt;One commonly used certificate standard is X.509.&lt;/p&gt;

&lt;h2 id=&quot;certificate-authority-ca&quot;&gt;Certificate authority (CA)&lt;/h2&gt;

&lt;p&gt;Certificate authorities are trusted third-parties who are responsible for managing the certificates, e.g., issuing and revoking certificates.&lt;/p&gt;

&lt;h1 id=&quot;main-services&quot;&gt;Main services&lt;/h1&gt;

&lt;p&gt;The main services provided by PKI include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Confidentiality
    &lt;ul&gt;
      &lt;li&gt;Data is protected from unauthorized entities.&lt;/li&gt;
      &lt;li&gt;By public key encryption and private key decryption&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Data integrity
    &lt;ul&gt;
      &lt;li&gt;Data could not be changed by unauthorized entities.&lt;/li&gt;
      &lt;li&gt;By digital signatures&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Authentication
    &lt;ul&gt;
      &lt;li&gt;Involved entities must prove who they are&lt;/li&gt;
      &lt;li&gt;By signing on authentication information&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Data origin authenticity
    &lt;ul&gt;
      &lt;li&gt;The origin of the data must be reliable.&lt;/li&gt;
      &lt;li&gt;By digital certificates and signatures&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Non-repudiation
    &lt;ul&gt;
      &lt;li&gt;Prevents involved entities from denying that they have performed some actions, e.g., some harmful actions.&lt;/li&gt;
      &lt;li&gt;By digital signatures&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;p&gt;[1] &lt;a href=&quot;http://www.amazon.com/Introduction-Public-Infrastructures-Johannes-Buchmann/dp/3642406564/ref=sr_1_1?ie=UTF8&amp;amp;qid=1456768775&amp;amp;sr=8-1&amp;amp;keywords=introduction+to+pki&quot;&gt;Introduction to Public Key Infrastructures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&quot;http://www.amazon.com/Understanding-Cryptography-Textbook-Students-Practitioners/dp/3642041000/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1456768821&amp;amp;sr=1-1&amp;amp;keywords=understanding+cryptography+a+textbook+for+students+and+practitioners&quot;&gt;Understanding Cryptography: A Textbook for Students and Practitioners&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[3] &lt;a href=&quot;http://www.amazon.com/Understanding-PKI-Standards-Deployment-Considerations/dp/0321743091/ref=sr_1_1?ie=UTF8&amp;amp;qid=1456768907&amp;amp;sr=8-1&amp;amp;keywords=understanding+pki&quot;&gt;Understanding PKI: Concepts, Standards, and Deployment Considerations&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/25/public-key-infrastructure.html</link>
        <guid isPermaLink="true">/2016/02/25/public-key-infrastructure.html</guid>
        
        
      </item>
    
      <item>
        <title>Programming Pearls</title>
        <description>
</description>
        <pubDate>Wed, 24 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/24/programming-pearls.html</link>
        <guid isPermaLink="true">/2016/02/24/programming-pearls.html</guid>
        
        
      </item>
    
      <item>
        <title>Enterprise Integration Patterns</title>
        <description>
</description>
        <pubDate>Wed, 24 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/24/enterprise-integration-patterns.html</link>
        <guid isPermaLink="true">/2016/02/24/enterprise-integration-patterns.html</guid>
        
        
      </item>
    
      <item>
        <title>EJB</title>
        <description>&lt;p&gt;x&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/24/ejb.html</link>
        <guid isPermaLink="true">/2016/02/24/ejb.html</guid>
        
        
      </item>
    
      <item>
        <title>Software Architectures</title>
        <description>&lt;h1 id=&quot;the-java-ee-architects-handbook-2nd-edition&quot;&gt;The Java EE Architect’s Handbook, 2nd edition&lt;/h1&gt;

&lt;h2 id=&quot;chapter-4-designing-external-application-interfaces&quot;&gt;Chapter 4: Designing external application interfaces&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;External application interfaces define how our application interacts with the external ones.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Strategies to fetch external data
    &lt;ul&gt;
      &lt;li&gt;Read the database of the external application directly&lt;/li&gt;
      &lt;li&gt;Read the operational data store created from the external data. The data in these data stores can also be in a vendor-independent format so that changing the data stores will not affect our application.&lt;/li&gt;
      &lt;li&gt;Use JAX-WS web services supported by the external applications. The most important advantage of using web services is that it is platform-independent. Two applications written in different technologies can still talk to each other via web services. One disadvantage of JAX-WS is that it is not optimized to receive big data.
&amp;gt; It is usually advisable to segregate code consuming or publishing web services from the rest of your application.&lt;/li&gt;
      &lt;li&gt;Use JAX-RS web services. One disadvantage is that it does not hava a standard specification yet, as opposed to JAX-WS whose specification can be written in WSDL files.&lt;/li&gt;
      &lt;li&gt;Use messaging services, which are asynchronous communication methods. These services can be implemented by message-driven beans in Java EE. Main advantage is the asynchronousity, which can provide guaranteeed dilivery because we can retry if the calls were failed.&lt;/li&gt;
      &lt;li&gt;Use EJBs, but this limits the participants to use Java.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Common mistakes
    &lt;ul&gt;
      &lt;li&gt;Use database or file system as message broker. This means that the messages are put into the database or file system, and then there is another process which will read these messages from the database or file system and handle them.&lt;/li&gt;
      &lt;li&gt;Use asynchronous methods when their responses are required&lt;/li&gt;
      &lt;li&gt;Not tested on production environment&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/software-architectures.html</link>
        <guid isPermaLink="true">/2016/02/23/software-architectures.html</guid>
        
        
      </item>
    
      <item>
        <title>Microservices</title>
        <description>
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/microservices.html</link>
        <guid isPermaLink="true">/2016/02/23/microservices.html</guid>
        
        
      </item>
    
      <item>
        <title>JAX-WS in practice</title>
        <description>
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/jax-ws-in-practice.html</link>
        <guid isPermaLink="true">/2016/02/23/jax-ws-in-practice.html</guid>
        
        
      </item>
    
      <item>
        <title>JAX-RS in practice</title>
        <description>&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;p&gt;[1] RESTful Java with JAX-RS 2.0, Bill Burke&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/jax-rs-in-practice.html</link>
        <guid isPermaLink="true">/2016/02/23/jax-rs-in-practice.html</guid>
        
        
      </item>
    
      <item>
        <title>Java Interview</title>
        <description>
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/java-interview.html</link>
        <guid isPermaLink="true">/2016/02/23/java-interview.html</guid>
        
        
      </item>
    
      <item>
        <title>Java EE patterns</title>
        <description>
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/java-ee-patterns.html</link>
        <guid isPermaLink="true">/2016/02/23/java-ee-patterns.html</guid>
        
        
      </item>
    
  </channel>
</rss>
