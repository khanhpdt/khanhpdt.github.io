<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software development notes</title>
    <description>Notes on my daily work as a software developer.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 26 Feb 2016 00:45:55 +0700</pubDate>
    <lastBuildDate>Fri, 26 Feb 2016 00:45:55 +0700</lastBuildDate>
    <generator>Jekyll v3.1.0</generator>
    
      <item>
        <title>Public Key Infrastructure</title>
        <description>&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;p&gt;[1] Introduction to Public Key Infrastructure, Springer&lt;/p&gt;

&lt;h1 id=&quot;chapter-1-the-purpose-of-pki&quot;&gt;Chapter 1: The purpose of PKI&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Enables the use of public key cryptography on open networks, especially the internet&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Main security goals
    &lt;ul&gt;
      &lt;li&gt;Confidentiality
        &lt;ul&gt;
          &lt;li&gt;Data is protected from unauthorized entities.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Integrity
        &lt;ul&gt;
          &lt;li&gt;Data could not be changed by unauthorized entities.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Authentication
        &lt;ul&gt;
          &lt;li&gt;Involved entities must prove who they are&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Authenticity
        &lt;ul&gt;
          &lt;li&gt;Data integrity and additionally the origin of the data must be reliable.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Non-repudiation
        &lt;ul&gt;
          &lt;li&gt;Prevents involved entities from denying that they have performed some actions, e.g., some harmful actions.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Secret key (or Symmetric) cryptosystems
    &lt;ul&gt;
      &lt;li&gt;Involved entities must agree on secret keys which are used to encrypt the plaintext and decrypt the ciphertext. The encryption and decryption keys can be different but they are still be computed from each other.&lt;/li&gt;
      &lt;li&gt;Examples: Data Encryption Standard (DES), Advanced Encryption Standard (AES)&lt;/li&gt;
      &lt;li&gt;Main disadvantage is that the secret keys still need to be exchanged between the entities.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Public key (or Asymmetric) cryptosystems
    &lt;ul&gt;
      &lt;li&gt;Main idea is to have one key for encryption (the encryption key) and one for decryption (the decryption key). These keys cannot be computed from each other. The encrytion key can be made public, and thus it is also called the public key. The decryption key is also called the private key.&lt;/li&gt;
      &lt;li&gt;For example, if Alice wants to send Bob a secret message, she will encrypt the message by Bob’s public key. On receiving the encrypted message, Bob will use his private key to decrypt the message.&lt;/li&gt;
      &lt;li&gt;Main advantage is that no exchange of secret keys are needed.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RSA public key cryptosystems
    &lt;ul&gt;
      &lt;li&gt;The first and also the most widely used public key cryptosystems&lt;/li&gt;
      &lt;li&gt;The public key is a pair (n, e) where n is called RSA modulus and e encryption exponent. The private key is called the decryption exponent.&lt;/li&gt;
      &lt;li&gt;Main disadvantage is its performance&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hybrid cryptosystems
    &lt;ul&gt;
      &lt;li&gt;The secret key cryptography is used for the message, and the public key cryptography is used for the secret key.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Digital signatures
    &lt;ul&gt;
      &lt;li&gt;Similar to public key cryptography in that there are two keys involved. One is the private key which is used to create the signature, and the other is the public (or verification) key which is used to verify the signature.&lt;/li&gt;
      &lt;li&gt;Can be used to prove the integrity and authenticity of the data&lt;/li&gt;
      &lt;li&gt;Also supports entity authentication and non-repudiation&lt;/li&gt;
      &lt;li&gt;Examples
        &lt;ul&gt;
          &lt;li&gt;RSA signature scheme: The most widely used digital signature scheme&lt;/li&gt;
          &lt;li&gt;Digital Signature Algorithm (DSA)&lt;/li&gt;
          &lt;li&gt;Elliptic Curve DSA (ECDSA)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;PKI responsibilities
    &lt;ul&gt;
      &lt;li&gt;Generate keys&lt;/li&gt;
      &lt;li&gt;Use keys for encrypting, decrypting, signing, and verifying&lt;/li&gt;
      &lt;li&gt;Publish public keys&lt;/li&gt;
      &lt;li&gt;Back up keys&lt;/li&gt;
      &lt;li&gt;Manage invalid keys&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;chapter-2-certificates&quot;&gt;Chapter 2: Certificates&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Certificates are data structures that bind public keys to entities and are signed by a trusted third-party. For example, if Alice wants to check the authenticity of Bob’s public key, she has to have a certificate which binds the public key to Bob. Furthermore, the certificate issuer (the third party) must be trustworthy.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Certificate standards&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;X.509&lt;/li&gt;
      &lt;li&gt;Attribute certificates&lt;/li&gt;
      &lt;li&gt;Card verifiable (CV) certificates&lt;/li&gt;
      &lt;li&gt;Pretty good privacy (PGP) certificates&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;chapter-4-private-keys&quot;&gt;Chapter 4: Private keys&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The keys have their own life cycles. They can be in many states and can transit from one state to another.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Storable keys are stored in volatile memory, and must be stored in some personal security environment (PSE) before being delivered.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PSEs: protect private keys from unauthorized accesses&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Software
        &lt;ul&gt;
          &lt;li&gt;PKCS#12&lt;/li&gt;
          &lt;li&gt;PKCS#8: almost always used with PKCS#12&lt;/li&gt;
          &lt;li&gt;Java keystore&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Hardware
        &lt;ul&gt;
          &lt;li&gt;Smart cards&lt;/li&gt;
          &lt;li&gt;Hardware security modules&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 25 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/25/public-key-infrastructure.html</link>
        <guid isPermaLink="true">/2016/02/25/public-key-infrastructure.html</guid>
        
        
      </item>
    
      <item>
        <title>Programming Pearls</title>
        <description>
</description>
        <pubDate>Wed, 24 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/24/programming-pearls.html</link>
        <guid isPermaLink="true">/2016/02/24/programming-pearls.html</guid>
        
        
      </item>
    
      <item>
        <title>Enterprise Integration Patterns</title>
        <description>
</description>
        <pubDate>Wed, 24 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/24/enterprise-integration-patterns.html</link>
        <guid isPermaLink="true">/2016/02/24/enterprise-integration-patterns.html</guid>
        
        
      </item>
    
      <item>
        <title>EJB</title>
        <description>&lt;p&gt;x&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/24/ejb.html</link>
        <guid isPermaLink="true">/2016/02/24/ejb.html</guid>
        
        
      </item>
    
      <item>
        <title>Software Architectures</title>
        <description>&lt;h1 id=&quot;the-java-ee-architects-handbook-2nd-edition&quot;&gt;The Java EE Architect’s Handbook, 2nd edition&lt;/h1&gt;

&lt;h2 id=&quot;chapter-4-designing-external-application-interfaces&quot;&gt;Chapter 4: Designing external application interfaces&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;External application interfaces define how our application interacts with the external ones.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Strategies to fetch external data
    &lt;ul&gt;
      &lt;li&gt;Read the database of the external application directly&lt;/li&gt;
      &lt;li&gt;Read the operational data store created from the external data. The data in these data stores can also be in a vendor-independent format so that changing the data stores will not affect our application.&lt;/li&gt;
      &lt;li&gt;Use JAX-WS web services supported by the external applications. The most important advantage of using web services is that it is platform-independent. Two applications written in different technologies can still talk to each other via web services. One disadvantage of JAX-WS is that it is not optimized to receive big data.
&amp;gt; It is usually advisable to segregate code consuming or publishing web services from the rest of your application.&lt;/li&gt;
      &lt;li&gt;Use JAX-RS web services. One disadvantage is that it does not hava a standard specification yet, as opposed to JAX-WS whose specification can be written in WSDL files.&lt;/li&gt;
      &lt;li&gt;Use messaging services, which are asynchronous communication methods. These services can be implemented by message-driven beans in Java EE. Main advantage is the asynchronousity, which can provide guaranteeed dilivery because we can retry if the calls were failed.&lt;/li&gt;
      &lt;li&gt;Use EJBs, but this limits the participants to use Java.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Common mistakes
    &lt;ul&gt;
      &lt;li&gt;Use database or file system as message broker. This means that the messages are put into the database or file system, and then there is another process which will read these messages from the database or file system and handle them.&lt;/li&gt;
      &lt;li&gt;Use asynchronous methods when their responses are required&lt;/li&gt;
      &lt;li&gt;Not tested on production environment&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/software-architectures.html</link>
        <guid isPermaLink="true">/2016/02/23/software-architectures.html</guid>
        
        
      </item>
    
      <item>
        <title>Microservices</title>
        <description>
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/microservices.html</link>
        <guid isPermaLink="true">/2016/02/23/microservices.html</guid>
        
        
      </item>
    
      <item>
        <title>JAX-WS in practice</title>
        <description>
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/jax-ws-in-practice.html</link>
        <guid isPermaLink="true">/2016/02/23/jax-ws-in-practice.html</guid>
        
        
      </item>
    
      <item>
        <title>JAX-RS in practice</title>
        <description>&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;p&gt;[1] RESTful Java with JAX-RS 2.0, Bill Burke&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/jax-rs-in-practice.html</link>
        <guid isPermaLink="true">/2016/02/23/jax-rs-in-practice.html</guid>
        
        
      </item>
    
      <item>
        <title>Java Interview</title>
        <description>
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/java-interview.html</link>
        <guid isPermaLink="true">/2016/02/23/java-interview.html</guid>
        
        
      </item>
    
      <item>
        <title>Java EE patterns</title>
        <description>
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0700</pubDate>
        <link>/2016/02/23/java-ee-patterns.html</link>
        <guid isPermaLink="true">/2016/02/23/java-ee-patterns.html</guid>
        
        
      </item>
    
  </channel>
</rss>
