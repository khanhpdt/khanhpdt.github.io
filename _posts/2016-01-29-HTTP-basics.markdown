---
layout: post
title: HTTP basics
---

# Reference
[1] HTTP The definitive guide

# Overview
- HTTP is a protocol at the Application layer
- HTTP transaction, messages
- HTTP architecture components
  - Proxy
  - Cache
  - Gateway
  - Tunnel
  - Agent

# Resources
- URI: URL and URN
- URL syntax
- Escape characters in URLs

# Messages
- Inbound vs. outbound, upstream vs. downstream
- Three parts
  - Formats of request and response messages
- Methods
- Status codes
- Headers

# Connection management
- HTTP over TCP over IP

# Client identification and Cookies
- Identification methods
  - HTTP headers in client request
  - Client IP address
  - Client login
   - Authorization header
  - Fat URLs
   - Client information is embedded in the URLs
  - Cookies

## Cookies
- RFC 2965
- Client state information
  - Mainly used to store client identification information. This is to help the server to keep track of the client browsing history
- Two types
  - Session cookies: deleted when exiting the browser
  - Persistent cookies: stored on disk and still available when exiting browser or restarting the computer, usually expired by a specified date
- How it works
  - Generated by server at the first time the client makes request to the server
  - Managed by browsers at the client side
  - Cookies can also contain other information other than the information about client identification

# Basic authentication
- Authentication means showing that you are who you claim you are.
- Challenge/Response authentication framework. Four phases:
  - Client: Request
  - Server: Challenge authentication
  - Client: Give authentication information in the header Authorization
  - Server: OK/NOK
- RFC 2617
- One of the two official authentication protocol. The other is digest authentication. Basic authentication is the most widely used protocol among the two of them.
- Encoding method: Base64. This method basically joins the username and password by a colon (:) and then encodes the result by Base64 algorithm.
- Pros:
  - Simple
- Cons:
  - The client identification is still vulnerable, as the base64-encoded identification information sent over the network can still be captured and decoded easily.
- Can be used with encrypted transmission (e.g., SSL) to avoid leaking identification information.

# Digest authentication
- One of the two official HTTP authentication protocol.
- Much more secure than Basic authentication, but less widely-used. However, it is designed to replace Basic authentication in the future.
- How it works
  - Never send password over the network. Instead, the fingerprint or digest of the password is sent. The digest is calculated by digest algorithm (e.g., MD5).
  - Both client and server must know the password (or the digest of the password) of the client beforehand.
  - nonce is used to prevent replay attacks.

## Security considerations
- RFC 2617
- Considerations
  - Header tampering
  - Replay attack
  - Multiple authentication mechanisms
  - Dictionary attack
  - Man-in-the-middle attack
  - Chosen plaintext attack
  - Storing passwords

# Secure HTTP
