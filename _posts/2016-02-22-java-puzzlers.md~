* Expressive Puzzlers

** Puzzle 2
- Not all decimals can be represented exactly using binary floating-point

** Puzzle 8
- Conditional operator
- Should always avoid mixed-type computations

** Puzzle 9
- Compound assignment (e.g., a += b) contains an implicit cast

* Puzzlers with characters

** Puzzle 13
- String interning
- Object comparison by equals() and ==

** Puzzle 18
- The conversion between String and byte[] always involves using a specific charset

* Loopy puzzlers

** Puzzle 25
- Postfix increment operator
- Do not assign a variable more than once in a single expression

** Puzzle 28
- Infinity
- Floating-point operations return the floating-point value that is closest to their exact mathematical result.
- Binary floating point arithmetics in Java

* Exceptional puzzlers

** Puzzle 36
- The try statement 14.20 (Java Language Specification Java SE 7 (JLS7))

** Puzzle 37
- Exception checking 11.2.3 (JLS7)

** Puzzle 38
- Compile-time checking of exceptions 11.2 JLS7
  "When interfaces are involved, more than one method declaration may be overridden by a single overriding declaration. In this case, the overriding declaration must have a throws clause that is compatible with all the overridden declarations (ยง9.4.1)."

** Puzzle 39
- The System.exit method halts the execution of the current thread and all others dead in their tracks.

** Puzzle 40
- Initialization of classes and interfaces 12.4 JLS7

** Puzzle 42
- & and | can be used as && and || for boolean values, but they do not support short-circuit evaluation.

** Puzzle 43
- It's possible that an undeclared exception can be thrown out. Examples:
-- newInstance()
-- Generics
- Java exception checking is a compile-time facility, not a JVM feature.

* Classy puzzlers

** Puzzle 46
- If more than one methods are applicable to an invocation, the most specific one is chosen.

** Puzzle 47
- Static fields are shared by their declaring class and any /subclasses/.

** Puzzle 48
- No dynamic dispatch on static methods (15.12.4.4 JLS7)

** Puzzle 49
- The static initializers and class variable initializers are executed in textual order (12.4.1 JLS7)

** Puzzle 50
- instanceof and cast operators
